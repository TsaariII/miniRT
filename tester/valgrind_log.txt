==35434== Invalid read of size 1
==35434==    at 0x10B1FF: ft_strlen (ft_strlen.c:28)
==35434==    by 0x10A332: valid_double (parser.c:37)
==35434==    by 0x10A37F: parse_double (parser.c:52)
==35434==    by 0x109E21: create_sphere (object_shape.c:11)
==35434==    by 0x10A1AD: parse_object (object.c:24)
==35434==    by 0x10926E: main (test.c:7)
==35434==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==35434== 
==35434== 
==35434== Process terminating with default action of signal 11 (SIGSEGV)
==35434==  Access not within mapped region at address 0x0
==35434==    at 0x10B1FF: ft_strlen (ft_strlen.c:28)
==35434==    by 0x10A332: valid_double (parser.c:37)
==35434==    by 0x10A37F: parse_double (parser.c:52)
==35434==    by 0x109E21: create_sphere (object_shape.c:11)
==35434==    by 0x10A1AD: parse_object (object.c:24)
==35434==    by 0x10926E: main (test.c:7)
==35434==  If you believe this happened as a result of a stack
==35434==  overflow in your program's main thread (unlikely but
==35434==  possible), you can try to increase the size of the
==35434==  main thread stack using the --main-stacksize= flag.
==35434==  The main thread stack size used in this run was 8388608.
